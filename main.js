!function(e){var n={};function a(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.m=e,a.c=n,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)a.d(t,r,function(n){return e[n]}.bind(null,r));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="",a(a.s=0)}([function(e,n,a){"use strict";a.r(n);var t=()=>'\n        <header class="header-main">\n            <div class="header-logo">\n                <a href="/"><img src="../public/assets/logo.png" alt="Rick and Morty"></a>\n            </div>\n            <nav class="header-nav">\n                <a href="#/about/" class="nav-element">About</a>\n                <button class="switch" id="switch">\n                    <span><i class="fas fa-sun"></i></span>\n                    <span><i class="fas fa-moon"></i></span>\n                </button>\n            </nav>\n        </header>\n    ';const r="https://rickandmortyapi.com/api/character/";var s=async e=>{const n=e?`${r}${e}`:r;try{const e=await fetch(n);return await e.json()}catch(e){console.error("Fetch Error",e)}};var c=()=>location.hash.slice(1).toLowerCase().split("/")[1]||"/";var o=()=>'\n        <section class="error404">\n            <img src="../public/assets/image-error.png">\n            <h2>Error 404</h2>\n        </section>\n    ';var i=e=>{if(e.length<=3){return"/"===e?e:"/:id"}return"/"+e};const l={"/":async()=>{const e=await s();console.log(e);return`\n        <div class="characters">\n            ${e.results.map(e=>`\n                <article class="characters-item">\n                    <a href="#/${e.id}/">\n                        <img src="${e.image}" alt="${e.name}">\n                        <h2 class="character-name">${e.name}</h2>\n                    </a>\n                </article> \n            `).join("")}\n        </div>\n    `},"/:id":async()=>{const e=c(),n=await s(e);return`\n        <section class="characters-inner">\n            <article class="characters-card">\n                <img src="${n.image}" alt="${n.name}">\n                <h2>${n.name}</h2>\n            </article>\n            <article class="characters-card">\n                <h3>Episodes: <span>${n.episode.length}</span></h3>\n                <h3>Status: <span>${n.status}</span></h3>\n                <h3>Species: <span>${n.species}</span></h3>\n                <h3>Gender: <span>${n.gender}</span></h3>\n                <h3>Origin: <span>${n.origin.name}</span></h3>\n                <h3>Last Location: <span>${n.location.name}</span></h3>\n            </article>\n        </section>\n    `},"/contact":"Contact"};var d=async()=>{const e=document.getElementById("header"),n=document.getElementById("content");e.innerHTML=await t();let a=c(),r=await i(a),s=l[r]?l[r]:o;n.innerHTML=await s();const d=e.querySelector("#switch");console.log(d),d.addEventListener("click",()=>{document.body.classList.toggle("dark"),d.classList.toggle("active"),document.body.classList.contains("dark")?localStorage.setItem("dark-mode","true"):localStorage.setItem("dark-mode","false")}),"true"===localStorage.getItem("dark-mode")?(document.body.classList.add("dark"),d.classList.add("active")):(document.body.classList.remove("dark"),d.classList.remove("active"))};window.addEventListener("load",d),window.addEventListener("hashchange",d)}]);